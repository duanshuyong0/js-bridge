const loaderUtils = require('loader-utils');
const ModuleFilenameHelpers = require("webpack/lib/ModuleFilenameHelpers");

// 生成文件版本信息 json 文件
function FileVersionPlugin(options) {
  if(arguments.length > 1)
    throw new Error("FileVersionPlugin only takes one argument (pass an options object)");
  if(typeof options === "string") {
    options = {
      version: options
    };
  }
  this.options = options || {};
  this.version = this.options.version || '[chunkhash]';
}

FileVersionPlugin.prototype.apply = function(compiler) {
  const options = this.options;
  const version = this.version;
  let extractedChunks;
  compiler.plugin('compilation', (compilation) => {
    compilation.plugin('optimize-chunk-assets', (chunks, callback) => {
      chunks.forEach((chunk) => {
        if(options.entryOnly && !chunk.isInitial()) return;
        chunk.files
          .filter(ModuleFilenameHelpers.matchObject.bind(undefined, options))
          .filter((file) =>
            /\.(js|css)/.test(file)
          )
          .forEach((file) => {
            const source = compilation.assets[file].source();
            const chunkhash = loaderUtils.getHashDigest(source, arguments[1], arguments[2], parseInt(arguments[3], 10));
            console.log(file, 'chunkhash', chunkhash);
            compilation.assets[file + '.json'] = {
              source: function() {
                return chunkhash;
              },
              size: function() {
                return chunkhash.length;
              }
            };
          });
      });
      callback();
    });
  });
};

module.exports = FileVersionPlugin;
